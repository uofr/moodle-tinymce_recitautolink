{"version":3,"file":"plugin.min.js","sources":["../src/plugin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n *\n * @module      tiny_recitautolink/plugin\n * @copyright  2019 RECIT\n * @license    {@link http://www.gnu.org/licenses/gpl-3.0.html} GNU GPL v3 or later\n */\n\nimport {getTinyMCE} from 'editor_tiny/loader';\nimport {getPluginMetadata} from 'editor_tiny/utils';\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {get_string as getString} from 'core/str';\nimport {component, pluginName, buttonName} from './common';\nimport {Editor} from './wrapper';\nimport * as Configuration from './configuration';\nimport * as Options from './options';\n\nexport default new Promise(async(resolve) => {\n    const bseditor = new Editor();\n    const [\n        tinyMCE,\n        pluginMetadata,\n    ] = await Promise.all([\n        getTinyMCE(),\n        getPluginMetadata(component, pluginName),\n    ]);\n    const [\n        ButtonTitle,\n        btn,\n    ] = await Promise.all([\n        getString('pluginname', component),\n        getButtonImage('html', component),\n    ]);\n\n    tinyMCE.PluginManager.add(`${component}/plugin`, (editor) => {\n        Options.register(editor);\n\n        const icon = 'html';\n        editor.ui.registry.addIcon(icon, btn.html);\n\n        editor.ui.registry.addButton(buttonName, {\n            icon,\n            tooltip: ButtonTitle,\n            onAction: () => bseditor.open(editor),\n        });\n\n        // This allows it to be added to a standard menu, or a context menu.\n        editor.ui.registry.addMenuItem(buttonName, {\n            icon,\n            text: ButtonTitle,\n            onAction: () => bseditor.open(editor),\n        });\n        return pluginMetadata;\n    });\n\n    // Resolve the Media Plugin and include configuration.\n    resolve([`${component}/plugin`, Configuration]);\n});\n"],"names":["Promise","async","bseditor","Editor","tinyMCE","pluginMetadata","all","component","pluginName","ButtonTitle","btn","PluginManager","add","editor","Options","register","ui","registry","addIcon","html","addButton","buttonName","icon","tooltip","onAction","open","addMenuItem","text","resolve","Configuration"],"mappings":";;;;;;gMA+Be,IAAIA,SAAQC,MAAAA,gBACjBC,SAAW,IAAIC,iBAEjBC,QACAC,sBACML,QAAQM,IAAI,EAClB,yBACA,4BAAkBC,kBAAWC,uBAG7BC,YACAC,WACMV,QAAQM,IAAI,EAClB,mBAAU,aAAcC,oBACxB,yBAAe,OAAQA,qBAG3BH,QAAQO,cAAcC,cAAOL,8BAAqBM,SAC9CC,QAAQC,SAASF,eAGjBA,OAAOG,GAAGC,SAASC,QADN,OACoBR,IAAIS,MAErCN,OAAOG,GAAGC,SAASG,UAAUC,mBAAY,CACrCC,KAJS,OAKTC,QAASd,YACTe,SAAU,IAAMtB,SAASuB,KAAKZ,UAIlCA,OAAOG,GAAGC,SAASS,YAAYL,mBAAY,CACvCC,KAXS,OAYTK,KAAMlB,YACNe,SAAU,IAAMtB,SAASuB,KAAKZ,UAE3BR,kBAIXuB,QAAQ,WAAIrB,6BAAoBsB"}